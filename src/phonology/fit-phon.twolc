Alphabet

a b c d e f g h i j k l m n o p q r s t u v w x y z å ä ö æ ø
%^WG:0 %^E2I:0 %^HMETA:0
%>:0 
%^A:ä %^O:ö %^U:y %^V
i2:i i3:i i4:i ;

Sets

FrontVowel = e i y ä ö ü æ ø ;            !!= * @CODE@ 
BackVowel = a o u å ;                                       !!= * @CODE@ 
ArchiVowel =  %^A %^O %^U ;                                 !!= * @CODE@ 
SomeVowel = %^V ;                                           !!= * @CODE@ 
NeutralVowel = e i ;                                        !!= * @CODE@ 
Vow   = FrontVowel BackVowel ArchiVowel SomeVowel ;       !!= * @CODE@ 
RoundedVowel = y ö o u å ;                                       !!= * @CODE@ 
UnroundedVowel = e ä a i ;                                 !!= * @CODE@ 
Dummy = %+ %^WG %^E2I %^HMETA %^VDEL %^EDEL %^AE %^AO %^¤ ;  !!= * @CODE@
DummyBorder = Dummy %> ;          !!= * @CODE@
LNRM     = l n r m ;
ArchiCns = %^N ;                                            !!= * @CODE@
SurfaceCns = b c d đ f g h j k l m n p q r s š t v w x z ;  !!= * @CODE@
Cns = SurfaceCns ArchiCns p2 t2 k2 ;                        !!= * @CODE@
Segment = Vowel Cns ;                                       !!= * @CODE@
NonFront = BackVowel ArchiVowel ArchiCns SomeVowel Cns NeutralVowel Dummy ;  !!= * @CODE@ 


!! !!!Rules 
Rules 

!! !!Consonant rules
!! !Quantitative Gradation
"ppttkk Gradation"
Cx:0 <=> [Vow|l|n|r] Cx _ Vow %^WG: ;
         Vow Cx _ e: h %> e ;
     where Cx in ( p t k ) ;

"h gradation"
h:0 <=> Vow [t|t|k] _ e %^WG: ;

!! !Qualitative gradation
"p:v"
p:v <=> Vow _ Vow:  %^WG: ;

"k:0"
k:0 <=> Vow _ Vow:  %^WG: ;

"k:j"
k:j <=> Vow [l|r] _ Vow:  %^WG: ;

!! !Gemination rules
"Gemination"
0:Cx <=> [.#.|Cns] Vow Cx _ :Vow (Dummy:) %>: (h) :Vow ;
         [.#.|Cns] Vow Cx _ Vow: (Dummy:) %>: h :Vow ;
where Cx in ( n m l j v ) ;


!! !!Vowel rules

!! !Vowel change rules
"Final e to i"
e:i <=> _ %^E2I: ;

"Suffix i to j"
i2:j <=> :Vow (Dummy:) %>: _ :Vow ;
!!€ sana>i2^A
!!€ sano0ja


!"j insertion before long"
!0:j <=> [.#.|Cns] i: _ Vow %>: Vow ;
!
!"i to j before j insertion before long"
!i:j <=> [.#.|Cns] _ :j Vow %>: Vow ;

"a:o when nonrounded root vowel and before i"
a:o <=> [.#.|#] Cns:* UnroundedVowel  ([u|i|e|a]) Cns:+ (:Cns) _ (%^WG:) %>: [i2:|j] ;
        [.#.|#] Cns:* UnroundedVowel  (o|u)       Cns:+ (:Cns) _ (%^WG:) %>: [i2:|j] ; ! see fkv
        [.#.|#] Cns:* RoundedVowel    Cns:+  Vow Cns:+ (:Cns) _ (%^WG:) %>: [i2:|j] ; 
!!€ san0a>iss^A
!!€ sanno0issa
!!€ san0a^HMETA>h^Vin
!!€ sann000hoin


!! !Vowel deletion rules

"a:0"
a:0 <=>                                    _ %^HMETA: %>: ;  ! before metathesis h
         [.#.|#] Cns:* RoundedVowel+ Cns:+ _ (%^WG:)  %>: [i2:|j] ;
!        [.#.|#] Cns:* UnroundedVowel  ([u|i|e|a]) Cns:+ _ %^HMETA: %>: h %^V: i ;
!        [.#.|#] Cns:* UnroundedVowel  (o|u)       Cns:+ _ %^HMETA: %>: h %^V: i ; ! see fkv
!        [.#.|#] Cns:* RoundedVowel      Cns:+ Vow Cns:+ _ %^HMETA: %>: h %^V: i ; 
!!€ kuva>iss^A
!!€ kuv00issa

!!€ kuva>^HMETAh^V^Vn
!!€ kuv000haan

"ä:0"
ä:0 <=> [.#.|#] Cns:* Vow:+ Cns:+ _ (%^WG:) %>: [i2:|j] ; ! before i
                                  _ %^HMETA: ; ! before metathesis h"
!!€ päivä>iss^A
!!€ päiv00issä

"e deletion before h in e stems"
e:0 <=> _ h %>: e ; ! säkheen
        _ %^HMETA: ;

"o deletion before metathesis h"
o:0 <=> _ %^HMETA: ;
!!€ poro^HMETA>h^V^Vn
!!€ por000hoon

"u deletion before metathesis h"
u:0 <=> _ %^HMETA: ;

"ö deletion before metathesis h"
ö:0 <=> _ %^HMETA: ;

"y deletion before metathesis h"
y:0 <=> _ %^HMETA: ;

"i deletion before metathesis h"
i:0 <=> _ %^HMETA: ;

!! !Vowel copying rules
"Vowel copying for h metathesis 1"
%^V:Vx <=> Vx: %^HMETA: %>: h _ [%^V:|i2:] ;
	where Vx in (a o u ä ö y e i ) ;
	
"Vowel copying for h metathesis 2"
%^V:Vx <=> Vx: %^HMETA: %>: h %^V: _ ;	
	where Vx in (a o u ä ö y e i ) ;


"i copying for h metathesis"
%^V:i <=> i: %^HMETA: %>: h _ i ;

"ä copying for h metathesis"
%^V:ä <=> ä: %^HMETA: %>: h _ i ;

"ö copying for h metathesis"
%^V:ö <=> ö: %^HMETA: %>: h _ i ;

"y copying for h metathesis"
%^V:y <=> y: %^HMETA: %>: h _ i ;

"u copying for h metathesis"
%^V:u <=> u: %^HMETA: %>: h _ i ;

"o copying for h metathesis"
%^V:o <=> [a:|o:] %^HMETA: %>: h _ i ;
	
	
"Back harmony"
!! __@RULENAME@__ 
 Vx:Vy <=> BackVowel: NonFront:* (:NonFront) NonFront:* %>: NonFront:* ([ NonFront: | :NonFront ]) NonFront:* _ ;  
         where Vx in ( %^A %^O %^U )
               Vy in (   a   o   u )
         matched ;
         
!"Vow copy"
!%^V:Vx <=> Vx %>: _ ;
!	where Vx in Vow ;         
